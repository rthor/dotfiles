" Let Vim and NeoVim shares the same plugin directory.
" Comment it out if you don't like
let g:spacevim_plug_home = '~/.vim/plugged'

" Enable the existing layers in space-vim
let g:spacevim_layers = [
  \ 'fzf',
  \ 'unite',
  \ 'better-defaults',
  \ 'which-key',
  \ 'airline',
  \ 'javascript',
  \ ]

" Manage your own plugins, refer to vim-plug's instruction for more detials.
function! UserInit()
  Plug 'liuchengxu/space-vim-dark'
  Plug 'easymotion/vim-easymotion'
  Plug 'terryma/vim-multiple-cursors'
  Plug 'editorconfig/editorconfig-vim'
  Plug 'jiangmiao/auto-pairs'
  Plug 'qpkorr/vim-bufkill'
  Plug 'mattn/emmet-vim'
  Plug 'alvan/vim-closetag'
  Plug 'scrooloose/nerdtree'
  Plug 'prettier/vim-prettier', { 'do': 'yarn install' }
  Plug 'airblade/vim-gitgutter'
  Plug 'sheerun/vim-polyglot'
  Plug 'eparreno/vim-l9'
  Plug 'othree/vim-autocomplpop'
  Plug 'Xuyuanp/nerdtree-git-plugin'
endfunction

" Override the default settings as well as adding extras
function! UserConfig()
  " Use gui colors in terminal if available
  function! s:enable_termgui()
    if has('termguicolors')
      set termguicolors
      if g:spacevim.tmux
        " If use vim inside tmux, see https://github.com/vim/vim/issues/993
        " set Vim-specific sequences for RGB colors
        let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
        let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
      endif
    endif
    " Start NERDTree in minimal UI mode (No help lines)
    let g:NERDTreeMinimalUI = 1
    " Make Prettier work with ES6
    let g:prettier#config#parser = 'babylon'
    " Allow more gitgutters
    let g:gitgutter_max_signs = 2000
    " Check for (swap file-) updates every 100ms instead of every 4000ms
    set updatetime=100
  endfunction

  " If your terminal(-emulator) supports true colors, uncomment the line below
  call s:enable_termgui()
endfunction

" Things to do on start
" Open NERDTree
autocmd vimenter * NERDTree

" Help with CSS suggestions
autocmd FileType css,scss set iskeyword=@,48-57,_,-,?,!,192-255

" Close NERDTree on last
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Enable mouse mode
set mouse=a

" Change cursor in insert mode
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif
:autocmd InsertEnter * set cul
:autocmd InsertLeave * set nocul"

" Move lines in <direction> ∆ is alt+j ˚ is alt+k
nnoremap <silent> ˝ :m+<CR>
nnoremap <silent> ˚ :m--<CR>
vnoremap <silent> ˝ :<C-u>exec "'<,'>m " . (line("'>") + 1)<CR>gv
vnoremap <silent> ˚ :m--<CR>gv"

" fzf settings
map <C-p> :Files<CR>
map ; :History<CR>
map <C-e> :Buffers<CR>
let $FZF_DEFAULT_COMMAND = 'ag -g ""'

" Show file in NERDTree
map <C-f> :NERDTreeFind<CR>

" Config NERDTree git diff symbols
let g:NERDTreeIndicatorMapCustom = {
  \ "Modified"  : "✹",
  \ "Staged"    : "✚",
  \ "Untracked" : "✭",
  \ "Renamed"   : "➜",
  \ "Unmerged"  : "═",
  \ "Deleted"   : "✖",
  \ "Dirty"     : "✗",
  \ "Clean"     : "✔︎",
  \ 'Ignored'   : '☒',
  \ "Unknown"   : "?"
  \ }
